
function selectSummaryStats(coordskey) {
	
	document.getElementById('loc-stat-select').innerHTML = String(round(parseFloat(coordskey.split(",")[0])))+","+String(round(parseFloat(coordskey.split(",")[1])))
	document.getElementById('count-stat-select').innerHTML = String(csvScoresbyLocationDict[coordskey]["count"])
	document.getElementById('mean-stat-select').innerHTML = String(csvScoresbyLocationDict[coordskey]["mean"])
	document.getElementById('median-stat-select').innerHTML = String(csvScoresbyLocationDict[coordskey]["median"])
	document.getElementById('stdev-stat-select').innerHTML = String(csvScoresbyLocationDict[coordskey]["stdev"])
	document.getElementById('skew-stat-select').innerHTML = String(csvScoresbyLocationDict[coordskey]["skewness"])

}

function displayPopUp(map, e, layername) {
	// Copy coordinates array.
	var coordinates;
	if(e.features[0].geometry.type == "LineString"){
		coordinates = e.features[0].geometry.coordinates[0].slice();
	}else{
		coordinates = e.features[0].geometry.coordinates.slice();
	}
	
	const properties = e.features[0].properties;
	const keyList = Object.keys(properties); 
	var description = "<div style='margin-bottom:5px;font-size:14px;'>"+layername+"</div> <div style='width:250px;height:250px;overflow:auto;'>"
	
	
	for (var i = 0; i < keyList.length; i++) {
		if(keyList[i] != "coordskey"){
			description += "<div>"+keyList[i]+" : "+properties[keyList[i]]+"</div>"
		}
	}
	description += "</div>"
	 
	// Ensure that if the map is zoomed out such that multiple
	// copies of the feature are visible, the popup appears
	// over the copy being pointed to.
	while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
	coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
	}
	 
	new mapboxgl.Popup()
	.setLngLat(coordinates)
	.setHTML(description)
	.addTo(map);
	
	if(layername == "WaterQualityData"){
		selectSummaryStats(properties.coordskey)
	}
}

map.on('click', 'WaterQualityData', (e) => {displayPopUp(map, e, 'WaterQualityData')});
map.on('click', 'Main', (e) => {displayPopUp(map, e, 'Main')});
map.on('click', 'Hydrant', (e) => {displayPopUp(map, e, 'Hydrant')});
map.on('click', 'StorageTank', (e) => {displayPopUp(map, e, 'StorageTank')});
map.on('click', 'DisBooster', (e) => {displayPopUp(map, e, 'DisBooster')});
map.on('click', 'Booster', (e) => {displayPopUp(map, e, 'Booster')});
map.on('click', 'ClearWell', (e) => {displayPopUp(map, e, 'ClearWell')});

// Change the cursor to a pointer when the mouse is over the wq_data layer.
map.on('mouseenter', 'WaterQualityData', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'Main', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'Hydrant', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'StorageTank', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'DisBooster', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'Booster', () => {map.getCanvas().style.cursor = 'pointer';});
map.on('mouseenter', 'ClearWell', () => {map.getCanvas().style.cursor = 'pointer';});

// Change it back to a pointer when it leaves.
map.on('mouseleave', 'WaterQualityData', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'Main', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'Hydrant', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'StorageTank', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'DisBooster', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'Booster', () => {map.getCanvas().style.cursor = '';});
map.on('mouseleave', 'ClearWell', () => {map.getCanvas().style.cursor = '';});